package org.usfirst.frc.team5482.robot.subsystems;

import org.usfirst.frc.team5482.robot.HardwareAdapter;

import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.PIDController;
import edu.wpi.first.wpilibj.Victor;
import edu.wpi.first.wpilibj.command.PIDSubsystem;

/**
 *
 */
public class AltitudePID extends PIDSubsystem {
	
	//PIDController pidController;

    // Initialize your subsystem here
	
	final double pGain = -5.0, iGain = -0.02, dGain = -2.0; //these may need to be positive for a non-inverted motor
	  
    PIDController pidController;
    AnalogInput potentiometer;  
    Victor elevatorMotor;
    Joystick joystick;
    public AltitudePID() {
    	super(PIDSubsystem);
    	
    	pidController = new PIDController(1,1,1, HardwareAdapter.kAltitudeEncoder, HardwareAdapter.kAltitudeMotor);
    }
    
    public void initDefaultCommand() {
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
    protected double returnPIDInput() {
        // Return your input value for the PID loop
        // e.g. a sensor, like a potentiometer:
        // yourPot.getAverageVoltage() / kYourMaxVoltage;
    	return 0.0;
    }
    
    protected void usePIDOutput(double output) {
        // Use output to drive your system, like a motor
        // e.g. yourMotor.set(output);
    }
    
    public void init(){
    	pidController.enable();
    }
}
