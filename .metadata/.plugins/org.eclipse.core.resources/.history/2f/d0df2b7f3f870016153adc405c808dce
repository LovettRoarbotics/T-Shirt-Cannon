
package org.usfirst.frc.team5482.robot;

import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.DoubleSolenoid.Value;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SampleRobot;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.smartdashboard.SendableChooser;

/**
 * This is a demo program showing the use of the RobotDrive class. The
 * SampleRobot class is the base of a robot application that will automatically
 * call your Autonomous and OperatorControl methods at the right time as
 * controlled by the switches on the driver station or the field controls.
 *
 * The VM is configured to automatically run this class, and to call the
 * functions corresponding to each mode, as described in the SampleRobot
 * documentation. If you change the name of this class or the package after
 * creating this project, you must also update the manifest file in the resource
 * directory.
 *
 * WARNING: While it may look like a good choice to use for your code if you're
 * inexperienced, don't. Unless you know what you are doing, complex code will
 * be much more difficult under this system. Use IterativeRobot or Command-Based
 * instead if you're new.
 */
public class Robot extends SampleRobot {
	RobotDrive myRobot;
	Joystick stick;
	final String defaultAuto = "Default";
	final String customAuto = "My Auto";
	SendableChooser chooser;

	DoubleSolenoid solenoid = new DoubleSolenoid(0, 1);

	public Robot() {
		myRobot = new RobotDrive(0, 1);
		myRobot.setExpiration(0.1);
		stick = new Joystick(0);
	}

	public void robotInit() {
	}

	public void autonomous() {

	}

	public void operatorControl() {
		if (stick.getRawButton(1)){
			solenoid.set(Value.kForward);
		} else if (stick.getRawButton(2)){
			solenoid.set(Value.kReverse);
		} else {
			solenoid.set(Value.kOff);
		}

	}

	public void test() {
	}
}
